// import React from 'react';

/*
 * This is the database of data points for specific waveforms.
 * We store a base number of waves for each required waveform and render multiples 
 * of them, allowing us to render specific rates accurately
 * 
 * rateRange: the range of renderable bpm for the given waveform
 * duration: duration each respective wave in the snippet in ms
 * totalDuration: total duration of the snippet in ms
 * nPoints: number of points in the duration
 * nWaves: number of waves in the snippet
 * minWaveWidth: smallest width of wave that encapsulates most of the necessary data 
 *    represented as either minimum width in points or maximum skip in points
 * compressionPolicy: the way we compress the waveform. NB: this is "mod" or "skip"
 *    skip skips over elements to compress the wave with similar spacing up to 
 *    minWaveWidth points skipped, 
 *    mod removes data from the end of the wave down to minWaveWidth points
 *    When compressionPolicy is mod, minWaveWidth represents the width, when it is skip, minWaveWidth represents the maximum number of points that can be skipped before too much clarity is lost
 * range: the minimum and maximum y values of the given waveform snippet
 * dataPoints: array of the data points for the snippet
 *
 */
export var waveformData = {
  'HR':{
    'TEST':{
      'rateRange': [20, 300],
      'duration': [400],
      'totalDuration': 400,
      'nPoints': 10,
      'nWaves': 1,
      'minWaveWidth': 2,
      'compressionPolicy': 'mod',
      'range': {
        'min': 0,
        'max': 1
      },
      'dataPoints': [1,0,0,0,0,0,0,0,0,0]
    },
    'NSR-SIMPLE': {
      'rateRange': [20, 300],
      'duration': [800],
      'totalDuration': 800,
      'nPoints': 60,
      'nWaves': 1,
      'minWaveWidth': 10,
      'compressionPolicy': 'mod',
      'range': {
        'min': -0.78,
        'max': 0.455
      },
      'dataPoints' : [0.28, 0.28, 0.335, 0.455, 0.22, -0.78, 0.165, 0.33, 0.325, 0.34, 0.335, 0.345, 0.32, 0.34, 0.33, 0.325, 0.335, 0.355, 0.335, 0.335, 0.34, 0.345, 0.355, 0.35, 0.36, 0.355, 0.365, 0.355, 0.34, 0.295, 0.25, 0.23, 0.24, 0.25, 0.265, 0.28, 0.28, 0.265, 0.275, 0.305, 0.305, 0.295, 0.305, 0.29, 0.3, 0.325, 0.31, 0.3, 0.295, 0.29, 0.27, 0.22, 0.23, 0.23, 0.21, 0.3, 0.315, 0.345, 0.355, 0.345]
    },
    'NSR': {
      'rateRange': [20, 300],
      'duration': [800],
      'totalDuration': 800,
      'nPoints': 300,
      'nWaves': 1,
      'minWaveWidth': 35,
      'compressionPolicy': 'mod',
      'range': {
        'min': -0.535,
        'max': 0.94
      },
      'dataPoints' : [-0.275, -0.28, -0.285, -0.305, -0.29, -0.3, -0.28, -0.29, -0.3, -0.315, -0.32, -0.335, -0.36, -0.385, -0.385, -0.405, -0.455, -0.485, -0.485, -0.425, -0.33, -0.22, -0.07, 0.12, 0.375, 0.62, 0.78, 0.84, 0.765, 0.52, 0.17, -0.165, -0.365, -0.435, -0.425, -0.37, -0.33, -0.325, -0.335, -0.345, -0.33, -0.325, -0.315, -0.31, -0.32, -0.335, -0.34, -0.325, -0.345, -0.335, -0.33, -0.335, -0.33, -0.325, -0.33, -0.33, -0.345, -0.355, -0.335, -0.325, -0.305, -0.32, -0.32, -0.33, -0.34, -0.335, -0.34, -0.345, -0.355, -0.355, -0.34, -0.33, -0.33, -0.33, -0.34, -0.35, -0.325, -0.325, -0.33, -0.33, -0.335, -0.335, -0.34, -0.33, -0.34, -0.35, -0.355, -0.35, -0.345, -0.33, -0.32, -0.335, -0.33, -0.345, -0.33, -0.335, -0.335, -0.345, -0.345, -0.355, -0.34, -0.34, -0.335, -0.33, -0.35, -0.35, -0.345, -0.335, -0.335, -0.335, -0.35, -0.355, -0.355, -0.345, -0.345, -0.335, -0.35, -0.36, -0.36, -0.36, -0.365, -0.36, -0.37, -0.385, -0.37, -0.36, -0.355, -0.36, -0.375, -0.375, -0.365, -0.365, -0.36, -0.36, -0.365, -0.37, -0.355, -0.33, -0.325, -0.325, -0.335, -0.34, -0.315, -0.3, -0.3, -0.29, -0.295, -0.29, -0.285, -0.275, -0.255, -0.25, -0.25, -0.265, -0.255, -0.245, -0.23, -0.245, -0.245, -0.255, -0.255, -0.24, -0.25, -0.255, -0.245, -0.255, -0.25, -0.25, -0.265, -0.26, -0.26, -0.265, -0.27, -0.265, -0.26, -0.275, -0.28, -0.29, -0.275, -0.27, -0.26, -0.28, -0.28, -0.285, -0.275, -0.275, -0.265, -0.27, -0.285, -0.29, -0.28, -0.275, -0.285, -0.28, -0.3, -0.3, -0.305, -0.295, -0.3, -0.31, -0.31, -0.305, -0.295, -0.285, -0.285, -0.29, -0.295, -0.31, -0.29, -0.295, -0.3, -0.305, -0.31, -0.325, -0.31, -0.3, -0.29, -0.31, -0.325, -0.33, -0.315, -0.3, -0.305, -0.31, -0.32, -0.33, -0.325, -0.315, -0.31, -0.305, -0.305, -0.31, -0.3, -0.305, -0.29, -0.3, -0.3, -0.305, -0.305, -0.29, -0.28, -0.295, -0.305, -0.315, -0.305, -0.295, -0.29, -0.28, -0.27, -0.275, -0.275, -0.27, -0.25, -0.25, -0.255, -0.225, -0.22, -0.205, -0.2, -0.205, -0.215, -0.23, -0.22, -0.225, -0.225, -0.225, -0.23, -0.235, -0.24, -0.235, -0.22, -0.21, -0.205, -0.245, -0.285, -0.285, -0.3, -0.31, -0.33, -0.33, -0.325, -0.315, -0.32, -0.315, -0.325, -0.34, -0.345, -0.34, -0.34, -0.35, -0.345, -0.355, -0.33, -0.335, -0.33, -0.32, -0.345, -0.355, -0.34, -0.33]
    },
    'VT': {
      'rateRange': [184],
      'duration': [326],
      'totalDuration': 326,
      'nPoints': 47,
      'nWaves': 1,
      'minWaveWidth': 0,
      'compressionPolicy': 'skip',
      'range': {
        'min': -199.5,
        'max': -62.5
      },
      'dataPoints' : [-199.5, -198.5, -193.5, -188.5, -183.5, -177.5, -171.5, -166.5, -160.5, -155.5, -147.5, -137.5, -114.5, -102.5, -96.5, -92.5, -90.5, -87.5, -84.5, -81.5, -78.5, -74.5, -71.5, -69.5, -67.5, -65.5, -64.5, -62.5, -64.5, -67.5, -71.5, -76.5, -85.5, -90.5, -94.5, -96.5, -98.5, -100.5, -100.5, -97.5, -84.5, -90.5, -119.5, -160.5, -178.5, -188.5, -196.5]
    },
    'VF': {
      'rateRange': [-1],
      'duration': [180, 186, 180, 168, 150, 186, 174, 228, 240, 198, 138, 168, 210, 174, 174, 120],
      'totalDuration': 2874,
      'nPoints': 480,
      'nWaves': 16,
      'minWaveWidth': 0,
      'compressionPolicy': 'skip',
      'range': {
        'min': -148.5,
        'max': -119.5
      },
      'dataPoints' : [-137.5, -138.5, -137.5, -136.5, -134.5, -133.5, -131.5, -129.5, -127.5, -126.5, -124.5, -123.5, -122.5, -122.5, -122.5, -123.5, -125.5, -127.5, -129.5, -131.5, -133.5, -134.5, -136.5, -138.5, -140.5, -142.5, -143.5, -145.5, -145.5, -145.5, -145.5, -145.5, -145.5, -143.5, -142.5, -140.5, -136.5, -133.5, -127.5, -125.5, -123.5, -122.5, -122.5, -121.5, -120.5, -119.5, -119.5, -119.5, -121.5, -123.5, -125.5, -129.5, -134.5, -137.5, -139.5, -140.5, -142.5, -145.5, -146.5, -147.5, -147.5, -147.5, -146.5, -146.5, -145.5, -142.5, -140.5, -137.5, -135.5, -132.5, -128.5, -126.5, -123.5, -121.5, -120.5, -120.5, -121.5, -122.5, -122.5, -122.5, -123.5, -125.5, -128.5, -131.5, -134.5, -136.5, -138.5, -139.5, -140.5, -141.5, -141.5, -141.5, -141.5, -140.5, -139.5, -138.5, -136.5, -134.5, -132.5, -130.5, -127.5, -126.5, -126.5, -125.5, -126.5, -126.5, -126.5, -126.5, -126.5, -127.5, -129.5, -131.5, -132.5, -132.5, -133.5, -134.5, -135.5, -135.5, -136.5, -136.5, -135.5, -134.5, -132.5, -131.5, -129.5, -128.5, -126.5, -125.5, -125.5, -126.5, -126.5, -126.5, -127.5, -129.5, -131.5, -133.5, -135.5, -136.5, -138.5, -140.5, -142.5, -143.5, -144.5, -144.5, -145.5, -144.5, -143.5, -142.5, -140.5, -138.5, -136.5, -134.5, -132.5, -129.5, -127.5, -125.5, -124.5, -123.5, -122.5, -121.5, -120.5, -122.5, -124.5, -127.5, -130.5, -132.5, -134.5, -136.5, -139.5, -141.5, -144.5, -145.5, -145.5, -146.5, -146.5, -147.5, -147.5, -147.5, -147.5, -146.5, -145.5, -142.5, -139.5, -136.5, -132.5, -129.5, -127.5, -125.5, -124.5, -123.5, -122.5, -121.5, -121.5, -121.5, -123.5, -124.5, -126.5, -128.5, -131.5, -135.5, -139.5, -143.5, -146.5, -146.5, -145.5, -145.5, -144.5, -143.5, -142.5, -141.5, -140.5, -140.5, -139.5, -138.5, -137.5, -135.5, -133.5, -130.5, -128.5, -127.5, -127.5, -127.5, -126.5, -125.5, -124.5, -124.5, -125.5, -126.5, -127.5, -127.5, -128.5, -129.5, -130.5, -131.5, -131.5, -133.5, -135.5, -136.5, -136.5, -137.5, -137.5, -138.5, -138.5, -137.5, -137.5, -136.5, -136.5, -136.5, -136.5, -136.5, -136.5, -136.5, -136.5, -135.5, -133.5, -132.5, -131.5, -130.5, -129.5, -128.5, -127.5, -127.5, -127.5, -127.5, -127.5, -127.5, -127.5, -128.5, -130.5, -131.5, -131.5, -132.5, -133.5, -134.5, -135.5, -135.5, -135.5, -136.5, -136.5, -136.5, -137.5, -138.5, -138.5, -138.5, -138.5, -138.5, -138.5, -137.5, -136.5, -135.5, -134.5, -131.5, -129.5, -128.5, -127.5, -127.5, -126.5, -127.5, -127.5, -128.5, -129.5, -130.5, -131.5, -132.5, -132.5, -132.5, -133.5, -133.5, -133.5, -134.5, -135.5, -136.5, -136.5, -136.5, -136.5, -136.5, -136.5, -136.5, -134.5, -133.5, -133.5, -132.5, -132.5, -131.5, -131.5, -132.5, -132.5, -133.5, -134.5, -135.5, -136.5, -137.5, -138.5, -139.5, -139.5, -140.5, -140.5, -140.5, -140.5, -140.5, -140.5, -140.5, -138.5, -137.5, -136.5, -134.5, -132.5, -131.5, -128.5, -126.5, -125.5, -124.5, -124.5, -124.5, -124.5, -127.5, -130.5, -132.5, -133.5, -135.5, -137.5, -139.5, -141.5, -142.5, -144.5, -145.5, -147.5, -147.5, -147.5, -147.5, -147.5, -146.5, -146.5, -144.5, -141.5, -138.5, -133.5, -130.5, -127.5, -125.5, -124.5, -124.5, -122.5, -121.5, -120.5, -121.5, -122.5, -123.5, -124.5, -126.5, -131.5, -136.5, -138.5, -139.5, -142.5, -144.5, -146.5, -147.5, -148.5, -148.5, -148.5, -148.5, -147.5, -146.5, -145.5, -142.5, -140.5, -138.5, -134.5, -130.5, -127.5, -126.5, -123.5, -122.5, -121.5, -122.5, -123.5, -123.5, -123.5, -124.5, -127.5, -129.5, -132.5, -134.5, -137.5, -138.5, -139.5, -141.5, -142.5, -142.5, -143.5, -142.5, -142.5, -141.5, -140.5, -138.5, -137.5, -135.5, -133.5, -131.5, -129.5, -129.5, -130.5, -130.5, -131.5, -131.5, -132.5, -133.5, -134.5, -135.5, -136.5, -137.5, -138.5, -139.5, -139.5, -140.5, -140.5, -140.5, -140.5, -140.5, -139.5, -138.5, -136.5, -135.5, -133.5, -132.5, -130.5, -127.5, -125.5, -124.5, -124.5, -123.5, -124.5, -124.5, -125.5, -128.5, -131.5, -132.5, -134.5, -136.5]

    },
    'PEA':{
      'rateRange': [-1],
      'duration': [400],
      'totalDuration': 400,
      'nPoints': 13,
      'nWaves': 1,
      'minWaveWidth': 0,
      'compressionPolicy': 'skip',
      'range': {
        'min': -1,
        'max': 1
      },
      'dataPoints' : [0,0,0,0,0,0,0,0,-0.05,-0.1,0.1,0,0]
    },
    'ASYSTOLE':{
      'rateRange': [-1],
      'duration': [400],
      'totalDuration': 400,
      'nPoints': 7,
      'nWaves': 1,
      'minWaveWidth': 0,
      'compressionPolicy': 'skip',
      'range': {
        'min': -0.75,
        'max': 3
      },
      'dataPoints' : [0,0.05,0,0.05,0,-0.05,0]
     }
  },
  'NOISE':{
    'NORMAL': {
      'nPoints': 50,
      'range': {
        'min': -0.535,
        'max': 0.94
      },
      'dataPoints' : [-0.295, -0.3, -0.31, -0.31, -0.305, -0.295, -0.285, -0.285, -0.29, -0.295, -0.31, -0.29, -0.295, -0.3, -0.305, -0.31, -0.325, -0.31, -0.3, -0.29, -0.31, -0.325, -0.33, -0.315, -0.3, -0.305, -0.31, -0.32, -0.33, -0.325, -0.315, -0.31, -0.305, -0.305, -0.31, -0.3, -0.305, -0.29, -0.3, -0.3, -0.305, -0.305, -0.29, -0.28, -0.295, -0.305, -0.315, -0.305, -0.295, -0.29]
    },
  },
  'BP':{
    'NORMAL': {

    }
  },
  'O2Sat':{
    'NORMAL': {
      'nPoints': 127,
      'range': {
        'min': -1,
        'max': 1
      },
      'dataPoints' : [-0.9321363, -0.8462636, -0.7689781, -0.6144072, -0.4512491, -0.2623291, -0.1335200, 0.1240982, 0.3044309, 0.5277000, 0.6650964, 0.7939055, 0.9141273, 0.9914127, 0.9484764, 0.8626036, 0.7252073, 0.5277000, 0.3731291, 0.2786691, 0.1155109, 0.0038764, -0.2108054, -0.3310272, -0.3911382, -0.4169000, -0.4684236, -0.5714709, -0.5886454, -0.6831054, -0.7689781, -0.7861527, -0.8205018, -0.8806127, -0.9321363, -0.9664854, -0.9235490, -0.8205018, -0.7603909, -0.6315818, -0.5800581, -0.4684236, -0.3396145, -0.2537418, -0.1506945, 0.0639873, 0.2614946, 0.3387800, 0.4761764, 0.5534618, 0.6736836, 0.8024927, 1.0000000, 0.9742382, 0.9141273, 0.8368418, 0.7337946, 0.6479218, 0.5105255, 0.3817164, 0.2958437, 0.1842091, 0.1069237, -0.0648218, -0.1421072, -0.2795036, -0.3224400, -0.4254872, -0.5113600, -0.5628836, -0.6487563, -0.7174545, -0.8205018, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8462636, -0.7947400, -0.6916927, -0.5886454, -0.4855981, -0.3224400, -0.2193927, -0.1506945, -0.0562345, 0.0210509, 0.1240982, 0.2357327, 0.3387800, 0.4504146, 0.5448746, 0.6479218, 0.7509691, 0.7939055, 0.8797782, 0.9828255, 0.9742382, 0.8883655, 0.7681436, 0.6736836, 0.5277000, 0.2872564, 0.2099709, 0.0897491, -0.0218854, -0.0905836, -0.2193927, -0.2795036, -0.3997254, -0.4254872, -0.4598363, -0.4426618, -0.5113600, -0.5800581, -0.6573436, -0.7432163, -0.8033272, -0.8634381, -0.9235490, -0.9578981, -0.9578981, -0.9750727, -0.9578981, -0.9493109]
    },
    'NORMAL2': {
      'nPoints': 253,
      'range': {
        'min': -1,
        'max': 1
      },
      'dataPoints' : [-0.9321363, -0.8892000, -0.8462636, -0.8076208, -0.7689781, -0.6916927, -0.6144072, -0.5328282, -0.4512491, -0.3567891, -0.2623291, -0.1979245, -0.1335200, -0.0047109, 0.1240982, 0.2142645, 0.3044309, 0.4160654, 0.5277000, 0.5963982, 0.6650964, 0.7295010, 0.7939055, 0.8540164, 0.9141273, 0.9527700, 0.9914127, 0.9699446, 0.9484764, 0.9055400, 0.8626036, 0.7939055, 0.7252073, 0.6264536, 0.5277000, 0.4504145, 0.3731291, 0.3258991, 0.2786691, 0.1970900, 0.1155109, 0.0596937, 0.0038764, -0.1034645, -0.2108054, -0.2709163, -0.3310272, -0.3610827, -0.3911382, -0.4040191, -0.4169000, -0.4426618, -0.4684236, -0.5199472, -0.5714709, -0.5800581, -0.5886454, -0.6358754, -0.6831054, -0.7260418, -0.7689781, -0.7775654, -0.7861527, -0.8033272, -0.8205018, -0.8505573, -0.8806127, -0.9063745, -0.9321363, -0.9493109, -0.9664854, -0.9450172, -0.9235490, -0.8720254, -0.8205018, -0.7904463, -0.7603909, -0.6959863, -0.6315818, -0.6058199, -0.5800581, -0.5242408, -0.4684236, -0.4040190, -0.3396145, -0.2966781, -0.2537418, -0.2022182, -0.1506945, -0.0433536, 0.0639873, 0.1627409, 0.2614946, 0.3001373, 0.3387800, 0.4074782, 0.4761764, 0.5148191, 0.5534618, 0.6135727, 0.6736836, 0.7380882, 0.8024927, 0.9012463, 1.0000000, 0.9871191, 0.9742382, 0.9441827, 0.9141273, 0.8754845, 0.8368418, 0.7853182, 0.7337946, 0.6908582, 0.6479218, 0.5792236, 0.5105255, 0.4461209, 0.3817164, 0.3387800, 0.2958437, 0.2400264, 0.1842091, 0.1455664, 0.1069237, 0.0210509, -0.0648218, -0.1034645, -0.1421072, -0.2108054, -0.2795036, -0.3009718, -0.3224400, -0.3739636, -0.4254872, -0.4684236, -0.5113600, -0.5371218, -0.5628836, -0.6058199, -0.6487563, -0.6831054, -0.7174545, -0.7689781, -0.8205018, -0.8462636, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8720254, -0.8591445, -0.8462636, -0.8205018, -0.7947400, -0.7432163, -0.6916927, -0.6401691, -0.5886454, -0.5371217, -0.4855981, -0.4040190, -0.3224400, -0.2709164, -0.2193927, -0.1850436, -0.1506945, -0.1034645, -0.0562345, -0.0175918, 0.0210509, 0.0725746, 0.1240982, 0.1799155, 0.2357327, 0.2872563, 0.3387800, 0.3945973, 0.4504146, 0.4976446, 0.5448746, 0.5963982, 0.6479218, 0.6994455, 0.7509691, 0.7724373, 0.7939055, 0.8368418, 0.8797782, 0.9313018, 0.9828255, 0.9785318, 0.9742382, 0.9313019, 0.8883655, 0.8282546, 0.7681436, 0.7209136, 0.6736836, 0.6006918, 0.5277000, 0.4074782, 0.2872564, 0.2486137, 0.2099709, 0.1498600, 0.0897491, 0.0339318, -0.0218854, -0.0562345, -0.0905836, -0.1549881, -0.2193927, -0.2494482, -0.2795036, -0.3396145, -0.3997254, -0.4126063, -0.4254872, -0.4426617, -0.4598363, -0.4512490, -0.4426618, -0.4770109, -0.5113600, -0.5457091, -0.5800581, -0.6187008, -0.6573436, -0.7002800, -0.7432163, -0.7732718, -0.8033272, -0.8333827, -0.8634381, -0.8934935, -0.9235490, -0.9407235, -0.9578981, -0.9578981, -0.9578981, -0.9664854, -0.9750727, -0.9664854, -0.9578981, -0.9536045, -0.9493109]
    }
  }
}
